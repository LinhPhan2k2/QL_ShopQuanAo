#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom4_WebsiteMuaBanQuanAo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBPermission")]
	public partial class DBPermissionEntitiesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertpermission(permission instance);
    partial void Updatepermission(permission instance);
    partial void Deletepermission(permission instance);
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    partial void Insertteacher(teacher instance);
    partial void Updateteacher(teacher instance);
    partial void Deleteteacher(teacher instance);
    #endregion
		
		public DBPermissionEntitiesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBPermissionConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBPermissionEntitiesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBPermissionEntitiesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBPermissionEntitiesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBPermissionEntitiesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<permission> permissions
		{
			get
			{
				return this.GetTable<permission>();
			}
		}
		
		public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<teacher> teachers
		{
			get
			{
				return this.GetTable<teacher>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.permissions")]
	public partial class permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_permission;
		
		private string _permission_name;
		
		private EntitySet<admin> _admins;
		
		private EntitySet<student> _students;
		
		private EntitySet<teacher> _teachers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_permissionChanging(int value);
    partial void Onid_permissionChanged();
    partial void Onpermission_nameChanging(string value);
    partial void Onpermission_nameChanged();
    #endregion
		
		public permission()
		{
			this._admins = new EntitySet<admin>(new Action<admin>(this.attach_admins), new Action<admin>(this.detach_admins));
			this._students = new EntitySet<student>(new Action<student>(this.attach_students), new Action<student>(this.detach_students));
			this._teachers = new EntitySet<teacher>(new Action<teacher>(this.attach_teachers), new Action<teacher>(this.detach_teachers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_permission", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_permission
		{
			get
			{
				return this._id_permission;
			}
			set
			{
				if ((this._id_permission != value))
				{
					this.Onid_permissionChanging(value);
					this.SendPropertyChanging();
					this._id_permission = value;
					this.SendPropertyChanged("id_permission");
					this.Onid_permissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_name", DbType="NVarChar(1000)")]
		public string permission_name
		{
			get
			{
				return this._permission_name;
			}
			set
			{
				if ((this._permission_name != value))
				{
					this.Onpermission_nameChanging(value);
					this.SendPropertyChanging();
					this._permission_name = value;
					this.SendPropertyChanged("permission_name");
					this.Onpermission_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_admin", Storage="_admins", ThisKey="id_permission", OtherKey="id_permission")]
		public EntitySet<admin> admins
		{
			get
			{
				return this._admins;
			}
			set
			{
				this._admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_student", Storage="_students", ThisKey="id_permission", OtherKey="id_permission")]
		public EntitySet<student> students
		{
			get
			{
				return this._students;
			}
			set
			{
				this._students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_teacher", Storage="_teachers", ThisKey="id_permission", OtherKey="id_permission")]
		public EntitySet<teacher> teachers
		{
			get
			{
				return this._teachers;
			}
			set
			{
				this._teachers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_admins(admin entity)
		{
			this.SendPropertyChanging();
			entity.permission = this;
		}
		
		private void detach_admins(admin entity)
		{
			this.SendPropertyChanging();
			entity.permission = null;
		}
		
		private void attach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.permission = this;
		}
		
		private void detach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.permission = null;
		}
		
		private void attach_teachers(teacher entity)
		{
			this.SendPropertyChanging();
			entity.permission = this;
		}
		
		private void detach_teachers(teacher entity)
		{
			this.SendPropertyChanging();
			entity.permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admins")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_admin;
		
		private string _username;
		
		private string _password;
		
		private string _name;
		
		private string _email;
		
		private System.Nullable<int> _id_permission;
		
		private EntityRef<permission> _permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_adminChanging(int value);
    partial void Onid_adminChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_permissionChanging(System.Nullable<int> value);
    partial void Onid_permissionChanged();
    #endregion
		
		public admin()
		{
			this._permission = default(EntityRef<permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_admin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_admin
		{
			get
			{
				return this._id_admin;
			}
			set
			{
				if ((this._id_admin != value))
				{
					this.Onid_adminChanging(value);
					this.SendPropertyChanging();
					this._id_admin = value;
					this.SendPropertyChanged("id_admin");
					this.Onid_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_permission", DbType="Int")]
		public System.Nullable<int> id_permission
		{
			get
			{
				return this._id_permission;
			}
			set
			{
				if ((this._id_permission != value))
				{
					if (this._permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_permissionChanging(value);
					this.SendPropertyChanging();
					this._id_permission = value;
					this.SendPropertyChanged("id_permission");
					this.Onid_permissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_admin", Storage="_permission", ThisKey="id_permission", OtherKey="id_permission", IsForeignKey=true)]
		public permission permission
		{
			get
			{
				return this._permission.Entity;
			}
			set
			{
				permission previousValue = this._permission.Entity;
				if (((previousValue != value) 
							|| (this._permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permission.Entity = null;
						previousValue.admins.Remove(this);
					}
					this._permission.Entity = value;
					if ((value != null))
					{
						value.admins.Add(this);
						this._id_permission = value.id_permission;
					}
					else
					{
						this._id_permission = default(Nullable<int>);
					}
					this.SendPropertyChanged("permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.students")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_student;
		
		private string _username;
		
		private string _password;
		
		private string _name;
		
		private string _email;
		
		private System.Nullable<int> _id_permission;
		
		private EntityRef<permission> _permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_studentChanging(int value);
    partial void Onid_studentChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_permissionChanging(System.Nullable<int> value);
    partial void Onid_permissionChanged();
    #endregion
		
		public student()
		{
			this._permission = default(EntityRef<permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_student", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_student
		{
			get
			{
				return this._id_student;
			}
			set
			{
				if ((this._id_student != value))
				{
					this.Onid_studentChanging(value);
					this.SendPropertyChanging();
					this._id_student = value;
					this.SendPropertyChanged("id_student");
					this.Onid_studentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_permission", DbType="Int")]
		public System.Nullable<int> id_permission
		{
			get
			{
				return this._id_permission;
			}
			set
			{
				if ((this._id_permission != value))
				{
					if (this._permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_permissionChanging(value);
					this.SendPropertyChanging();
					this._id_permission = value;
					this.SendPropertyChanged("id_permission");
					this.Onid_permissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_student", Storage="_permission", ThisKey="id_permission", OtherKey="id_permission", IsForeignKey=true)]
		public permission permission
		{
			get
			{
				return this._permission.Entity;
			}
			set
			{
				permission previousValue = this._permission.Entity;
				if (((previousValue != value) 
							|| (this._permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permission.Entity = null;
						previousValue.students.Remove(this);
					}
					this._permission.Entity = value;
					if ((value != null))
					{
						value.students.Add(this);
						this._id_permission = value.id_permission;
					}
					else
					{
						this._id_permission = default(Nullable<int>);
					}
					this.SendPropertyChanged("permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.teachers")]
	public partial class teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_teacher;
		
		private string _username;
		
		private string _password;
		
		private string _name;
		
		private string _email;
		
		private System.Nullable<int> _id_permission;
		
		private EntityRef<permission> _permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_teacherChanging(int value);
    partial void Onid_teacherChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_permissionChanging(System.Nullable<int> value);
    partial void Onid_permissionChanged();
    #endregion
		
		public teacher()
		{
			this._permission = default(EntityRef<permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_teacher", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_teacher
		{
			get
			{
				return this._id_teacher;
			}
			set
			{
				if ((this._id_teacher != value))
				{
					this.Onid_teacherChanging(value);
					this.SendPropertyChanging();
					this._id_teacher = value;
					this.SendPropertyChanged("id_teacher");
					this.Onid_teacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_permission", DbType="Int")]
		public System.Nullable<int> id_permission
		{
			get
			{
				return this._id_permission;
			}
			set
			{
				if ((this._id_permission != value))
				{
					if (this._permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_permissionChanging(value);
					this.SendPropertyChanging();
					this._id_permission = value;
					this.SendPropertyChanged("id_permission");
					this.Onid_permissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_teacher", Storage="_permission", ThisKey="id_permission", OtherKey="id_permission", IsForeignKey=true)]
		public permission permission
		{
			get
			{
				return this._permission.Entity;
			}
			set
			{
				permission previousValue = this._permission.Entity;
				if (((previousValue != value) 
							|| (this._permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permission.Entity = null;
						previousValue.teachers.Remove(this);
					}
					this._permission.Entity = value;
					if ((value != null))
					{
						value.teachers.Add(this);
						this._id_permission = value.id_permission;
					}
					else
					{
						this._id_permission = default(Nullable<int>);
					}
					this.SendPropertyChanged("permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
